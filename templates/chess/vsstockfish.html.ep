% layout 'dashboard';

% title 'Analyse';

<script src="https://cdnjs.cloudflare.com/ajax/libs/chess.js/0.10.2/chess.js"></script>
<script src="/chessboardjs/js/chessboard-0.3.0.js"></script>
<link rel="stylesheet" href="/chessboardjs/css/chessboard-0.3.0.css" />

<script src="/dashboard/js/plugins/bootstrap-slider/bootstrap-slider.js"></script>
<link rel="stylesheet" href="/dashboard/css/bootstrap-slider/slider.css" />

<script src="http://code.highcharts.com/highcharts.js"></script>

<script>

  $(window).unload(function(){
    console.log('kill stockfish');
    sendMessage(JSON.stringify('uci - kill'));
  });

  var board, game = new Chess();
  var perc;
  var moves = 0;    // white is even
  var centipawn;
  var eco, opening, variation;

  var sparkline_chart;
  var sparkline_options = {
        type: 'bar',
        barColor: '#0000bf',
        width: "410px",
        height: "100px",
        barWidth: 10
  };
  var sparkline_data = [];

  var option_threads;
  var option_hash;
  var option_contempt;
  var option_skill;


  // do not pick up pieces if the game is over only pick up pieces for White
  var onDragStart = function(source, piece, position, orientation) {
    if (game.in_checkmate() === true || game.in_draw() === true ||
      piece.search(/^b/) !== -1) {
      return false;
    }
  };
  
  var makeRandomMove = function() {
    var possibleMoves = game.moves();
  
    // game over
    if (possibleMoves.length === 0) { 
      $('#pgn').val(game.pgn({ max_width: 5, newline_char: '\n' })); 
      return;
    }
  
    var randomIndex = Math.floor(Math.random() * possibleMoves.length);
    game.move(possibleMoves[randomIndex]);
    board.position(game.fen());
    $('#pgn').val(game.pgn({ max_width: 5, newline_char: '\n' })); 
    //sendMessage(JSON.stringify('uci - position - ' + game.pgn()));
    moves++;
  };
  
  var onDrop = function(source, target) {
    // see if the move is legal
    var move = game.move({
      from: source,
      to: target,
      promotion: 'q' // NOTE: always promote to a queen for example simplicity
    });
  
    // illegal move
    if (move === null) return 'snapback';
  
    // make random legal move for black
    // window.setTimeout(makeRandomMove, 250);
  };

  // update the board position after the piece snap for castling, en passant, pawn promotion
  var onSnapEnd = function() {
    board.position(game.fen());
    //ws.send(JSON.stringify(game.fen()));
    if (moves === 0) {
      option_threads     = $("#slider_threads_val").text();
      option_hash        = $("#slider_hash_val").text();
      option_contempt    = $("#slider_contempt_val").text();
      option_skill       = $("#slider_skill_val").text();
      sendMessage(JSON.stringify('uci - setoption name Threads value ' + option_threads));
      //sendMessage(JSON.stringify('uci - setoption name Hash value ' + option_hash));
      //sendMessage(JSON.stringify('uci - setoption name Hash value 50'));
      sendMessage(JSON.stringify('uci - setoption name Contempt value ' + option_contempt));
      sendMessage(JSON.stringify('uci - setoption name Skill Level value ' + option_skill));
      sendMessage(JSON.stringify('uci - setoption name Slow Mover value 15'));
      sendMessage(JSON.stringify('uci - setoption name Ponder value ON'));
      sendMessage(JSON.stringify('uci - setoption name Debug Log File value /home/vic/sf-debug.log'));
      sendMessage(JSON.stringify('uci - ucinewgame'));
    }
    sendMessage(JSON.stringify('uci - position - ' + game.pgn()));
    moves++;
  };

  var init = function() {

    var cfg = {
      draggable: true,
      position: 'start',
      onDragStart: onDragStart,
      onDrop: onDrop,
      onSnapEnd: onSnapEnd,
      //pieceTheme: '/chessboardjs/img/chesspieces/minimalist/{piece}.png'
    };

    board = ChessBoard('board', cfg);

    setupWebSocket(1);
    setupStockfish();

    $("#progressbar").progressbar("value");

  }

  $(document).ready(init);

  function setupStockfish() {
      sendMessage(JSON.stringify('uci - uci'));
      sendMessage(JSON.stringify('uci - isready'));
  }

  function setupWebSocket(firsttime){

    var url = '<%= url_for('chess/vsstockfish/ws')->to_abs %>';
    url = url.replace('http','ws');
    ws = new WebSocket( url );

    // get from server
    ws.onmessage = function(e){
      
      var point = JSON.parse(e.data);

      var myRegExpOpenings = /(ECO|Opening|Variation)/;
      var match = myRegExpOpenings.exec(point.data);
      if (match != null) {
        console.log(match);
      }

      $('#io').append(point.data + "\n"); 
      $('#io').scrollTop($('#io')[0].scrollHeight);

      // get centipawn advantage
      var myRegExpCp = / cp (-?\d{1,4}) /;
      var match = myRegExpCp.exec(point.data + '\n');  // <-- whats that newline doing there dude?
      if (match != null) {
          centipawn = match[1];
          centipawn = centipawn * -1;
          // console.log('CENTIPWN: ' + centipawn);
          var percent = (centipawn-(-1200))*100/(1200-(-1200));
          perc = Math.round(percent);
          if (perc > 100) { perc = 100; }
          if (perc < 0) { perc = 0; }
          perc = perc + '%';
      }

      // move black peices
      var myRegExpPonder = / (\w\d\w\d) ponder \w\d\w\d/;
      var match = myRegExpPonder.exec(point.data);
      if (match != null && match[1].length === 4) {
        var from = match[1].substring(0,2);
        var to   = match[1].substring(2,5);
        var object_literal = { from: from, to: to  }; 
        game.move(object_literal); 
        board.position(game.fen());
        $('#pgn').val(game.pgn({ max_width: 5, newline_char: '\n' })); 
        $('#pgn').scrollTop($('#pgn')[0].scrollHeight);
        // update centipawn progressbar
        console.log('PERC: ' + perc);
        $(".progress-bar-centipawn").animate({
          height: perc
        }, 200);
        // add to sparkline
        console.log('CENTIPWN: ' + centipawn);
        sparkline_data.push(centipawn); 
        $('#sparkline_chart').sparkline(sparkline_data, sparkline_options);
        return;
      }
      var myRegExpBestmove = /^ (\w\d\w\d)/;
      var match = myRegExpBestmove.exec(point.data);
      if (match != null && match[1].length === 4) {
        var from = match[1].substring(0,2);
        var to   = match[1].substring(2,5);
        var object_literal = { from: from, to: to  }; 
        game.move(object_literal); 
        board.position(game.fen());
        $('#pgn').val(game.pgn({ max_width: 5, newline_char: '\n' })); 
        $('#pgn').scrollTop($('#pgn')[0].scrollHeight);
        // update centipawn progressbar
        console.log('PERC: ' + perc);
        $(".progress-bar-centipawn").animate({
            height: perc
        }, 100);
        // add to sparkline
        console.log('CENTIPWN: ' + centipawn);
        sparkline_data.push(centipawn); 
        $('#sparkline_chart').sparkline(sparkline_data, sparkline_options);
        return;
      }
    };

    // on connection
    ws.onopen = function(e) {
      if (firsttime) {
        ws.send(JSON.stringify('Hello server'));
      }
    }

    // open a new one when closed
    ws.onclose = function(){
      setTimeout(setupWebSocket(0), 1000);
    };

  }

  function sendMessage(msg){
    // Wait until the state of the socket is not ready and send the message when it is...
    waitForSocketConnection(ws, function(){
      ws.send(msg);
    });
  }

  // Make the function wait until the connection is made...
  function waitForSocketConnection(socket, callback){
    setTimeout(
        function () {
            if (socket.readyState === 1) {
                console.log("new connection made")
                if(callback != null){
                    callback();
                }
                return;

            } else {
                console.log("waiting for connection...")
                waitForSocketConnection(socket, callback);
            }

        }, 5); // wait 5 milisecond for the connection...
  }

</script>


<div class="row">

        <style>
        .progress {background: rgba(0, 0, 0, 1); border: 0px solid rgba(245, 245, 245, 1); border-radius: 0px; height: 100px;}
        .progress-bar-centipawn {background: rgba(219, 219, 219, 1);}
        </style>

  <div class="col-md-5" id="columnOne">
    <div class="box box-solid">
      <div class="box-body">
          <div id="board" style="width: 100%; height=100%; float: left"></div>
<!--
          <div class="progress vertical progress-xs" style="height: 100%; width: 100%">
              <div class="progress-bar progress-bar-centipawn" role="progressbar" aria-valuenow="-500" aria-valuemin="-1500" aria-valuemax="1500"></div>
          </div>
-->
      </div>
    </div>
  </div>

<!--
  <div class="col-md-1">
    <div class="box box-solid">
      <div class="box-body">
        
      </div>
    </div>
  </div>
-->
  <div class="col-md-7" id="columnTwo">
    <div class="box box-solid">
    <div class="box-body">
    <div class="nav-tabs-custom">
      <ul class="nav nav-tabs">
        <li class="active"><a href="#tab_1" data-toggle="tab">Stockfish</a></li>
        <li><a href="#tab_2" data-toggle="tab">PGN</a></li>
        <li><a href="#tab_3" data-toggle="tab">IO</a></li>
        <li><a href="#tab_4" data-toggle="tab">Chart</a></li>
      </ul>
      <div class="tab-content">

        <div class="tab-pane active" id="tab_1">
        
<!--- TAB ONE --->

          <div class="box box-default">
            <div class="box-body">

              <p><span>Threads : <span id="slider_threads_val">2</span><center><input id="slider_threads" style="width: 85% !important; background: green;" type="text" data-slider-min="1" data-slider-max="4" data-slider-step="1" data-slider-value="2"/></center></span></p>

              <br>
          
              <p>Hash (MB) : <span id="slider_hash_val">2048</span><center><input id="slider_hash" style="width: 85% !important; background: green;" type="text" data-slider-min="1" data-slider-max="4096" data-slider-step="1" data-slider-value="2048"/></center></span> </p>

              <br>
          
              <p>Contempt : <span id="slider_contempt_val">0</span><center><input id="slider_contempt" style="width: 85% !important; background: green;" type="text" data-slider-min="-100" data-slider-max="100" data-slider-step="1" data-slider-value="0"/></center></span> </p>

              <br>
          
              <p>Skill : <span id="slider_skill_val">10</span><center><input id="slider_skill" style="width: 85% !important; background: green;" type="text" data-slider-min="0" data-slider-max="20" data-slider-step="1" data-slider-value="10"/></center></span> </p>

              <script>
                  $("#slider_threads").slider();
                  $("#slider_threads").on("slide", function(slideEvt) {
                      $("#slider_threads_val").text(slideEvt.value);
                  });

                  $("#slider_hash").slider();
                  $("#slider_hash").on("slide", function(slideEvt) {
                      $("#slider_hash_val").text(slideEvt.value);
                  });

                  $("#slider_contempt").slider();
                  $("#slider_contempt").on("slide", function(slideEvt) {
                      $("#slider_contempt_val").text(slideEvt.value);
                  });

                  $("#slider_skill").slider();
                  $("#slider_skill").on("slide", function(slideEvt) {
                      $("#slider_skill_val").text(slideEvt.value);
                  });
              </script>
              <style>
                   .slider-selection {
                      background: #428041;
                  }
                   .slider-handle {
                      background: green;
                  }
              </style>

             </div>
          </div>
        </div>

        <div class="tab-pane" id="tab_2">

<!--- TAB TWO --->

          <div class="form-group">
            <textarea id="pgn" class="form-control" rows="16" style="overflow-x: auto;" readonly></textarea>
          </div>

        </div>

        <div class="tab-pane" id="tab_3">

<!--- TAB THREE --->

          <div class="form-group">
            <textarea id="io" class="form-control" rows="16" style="white-space:pre; overflow-x: auto;" readonly></textarea>
          </div>

        </div>

        <div class="tab-pane" id="tab_4">

<!--- TAB FOUR --->

        </div>



        </div>
      </div>
    </div>
    </div>
    </div>
  </div>
</div>
  <script>$("#columnTwo").height($("#columnOne").height());</script>

<div class="row">

  <div class="col-md-12">
    <div class="box box-solid">
      <div class="box-body text-center">
        <div class="sparkline" id="sparkline_chart" data-type="line" data-spot-Radius="3" data-highlight-Spot-Color="#f39c12" data-highlight-Line-Color="#222" data-min-Spot-Color="#f56954" data-max-Spot-Color="#00a65a" data-spot-Color="#39CCCC" data-offset="90" data-width="100%" data-height="100px" data-line-Width="2" data-line-Color="#39CCCC" data-fill-Color="rgba(57, 204, 204, 0.08)">
        </div>
      </div> <!-- /.box-body -->
    </div> <!-- /.box -->
  </div> <!-- /.col -->

</div>

